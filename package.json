{
  "name": "spotgen",
  "version": "1.0.28",
  "author": "Vegard Ã˜ye <vegard_oye@hotmail.com>",
  "description": "A tool for generating Spotify playlists programmatically. Convert websites to Spotify playlists, incorporate Last.fm listener data, and employ smart algorithms to reorder the tracks.",
  "license": "MIT",
  "keywords": ["spotify", "playlist", "generator"],
  "main": "index.js",
  "type": "commonjs",
  "bin": {"spotgen": "index.js"},
  "repository": {
    "type": "git"                                     ,
    "url" : "git+https://github.com/epsil/spotgen.git"
  },
  "bugs": {"url": "https://github.com/epsil/spotgen/issues"},
  "homepage": "https://github.com/epsil/spotgen",
  "engines": {"bun": ">=1.0.0"},
  "dependencies": {
    "@clack/prompts"   : "^0.6.3"                     ,
    "base-64"          : "^0.1.0"                     ,
    "bootstrap"        : "^3.3.7"                     ,
    "bun-types"        : "^0.8.1"                     ,
    "cli-input"        : "^0.2.0"                     ,
    "clipboardy"       : "^1.1.4"                     ,
    "csv-stringify"    : "^1.0.4"                     ,
    "eol"              : "^0.8.1"                     ,
    "express"          : "^4.15.4"                    ,
    "fs"               : "0.0.1-security"             ,
    "git-rev"          : "^0.2.1"                     ,
    "jquery"           : "^3.1.1"                     ,
    "jsdom"            : "^22.1.0"                    ,
    "lodash"           : "^4.17.4"                    ,
    "opn"              : "^5.1.0"                     ,
    "preq"             : "^0.5.2"                     ,
    "promise"          : "^7.1.1"                     ,
    "request"          : "^2.79.0"                    ,
    "string-similarity": "^1.1.0"                     ,
    "urijs"            : "^1.18.10"                   ,
    "xregexp"          : "^3.2.0"
  },
  "devDependencies": {
    "@types/git-rev"  : "^0.2.0" ,
    "@types/jsdom"    : "^21.1.2",
    "@types/node"     : "^20.5.7",
    "browserify"      : "^13.1.1",
    "chai"            : "^3.5.0" ,
    "chai-as-promised": "^6.0.0" ,
    "http-server"     : "^0.10.0",
    "jsdoc"           : "^3.4.3" ,
    "jshint"          : "^2.9.4" ,
    "markdownlint-cli": "^0.3.1" ,
    "mocha"           : "^3.2.0" ,
    "standard"        : "^8.6.0" ,
    "typedoc"         : "^0.24.8",
    "uglify-js"       : "^2.7.5"
  },
  "scripts": {
    "dev": "bun run src/spotifyPlaylistGenerator.ts",
    "dev:watch": "bun --watch src/spotifyPlaylistGenerator.ts",
    "build:ts": "bun build src/spotifyPlaylistGenerator.ts --compile --outfile dist/spotgen",
    "build:bundle": "bun build src/spotifyPlaylistGenerator.ts --outfile dist/spotgen.js",
    "typecheck": "bun --bun tsc --noEmit",
    "clean": "git stash && git clean -d -f -f -x",
    "clean!": "bun run reset && bun run clean",
    "clean!!": "bun run reset! && bun run clean",
    "ds_store": "find . -iname \"*.DS_Store\" -exec git rm {} \\;; find . -iname \"*er i konflikt*\" -exec git rm {} \\;; find . -iname \"*.DS_Store\" -exec rm {} \\;; find . -iname \"*.docx\" -exec rm {} \\;; find . -iname \"*.log\" -exec rm {} \\;",
    "cli": "bun run index.js",
    "gui": "git gui &",
    "dump": "bun run index.js > output.txt && cat output.txt",
    "build": "bun run browser && bun run jsdoc",
    "rebuild": "bun run build && bun run http",
    "retest": "bun run clean! && bun install && bun test",
    "dist": "bun run build && bun run minify && cp -r doc dist && cp -r test dist",
    "lint": "bun run jshint && bun run standard && bun run markdownlint",
    "jshint": "jshint index.js lib/album.js lib/artist.js lib/auth.js lib/collection.js lib/generator.js lib/http.js lib/lastfm.js lib/playlist.js lib/parser.js lib/queue.js lib/scraper.js lib/similar.js lib/sort.js lib/spotify.js lib/top.js lib/track.js lib/util.js dist/web.js test/test.js",
    "standard": "standard index.js lib/album.js lib/artist.js lib/auth.js lib/collection.js lib/generator.js lib/http.js lib/lastfm.js lib/playlist.js lib/parser.js lib/queue.js lib/scraper.js lib/similar.js lib/sort.js lib/spotify.js lib/top.js lib/track.js lib/util.js dist/web.js test/test.js",
    "markdownlint": "markdownlint README.md Tips.md",
    "nyan": "mocha --reporter nyan test/test.js",
    "tests": "bun test test/test.js",
    "test": "bun run lint && bun run tests",
    "server": "bunx http-server -p 9000 dist",
    "start": "open http://localhost:9000/",
    "http": "bun run start && bun run server",
    "browser": "browserify dist/web.js -i express -i preq -i xregexp -o dist/bundle.js && browserify test/test.js -i express -i preq -i xregexp -o test/bundle.js",
    "minify": "uglifyjs dist/bundle.js -o dist/bundle.js",
    "open": "open dist/index.html",
    "web": "bun run browser && bun run open",
    "builddoc": "bun run jsdoc && bun run doc",
    "jsdoc": "rm -rf doc && jsdoc -c .jsdocrc -d doc README.md index.js lib/album.js lib/artist.js lib/auth.js lib/collection.js lib/generator.js lib/http.js lib/lastfm.js lib/playlist.js lib/parser.js lib/queue.js lib/scraper.js lib/similar.js lib/sort.js lib/spotify.js lib/top.js lib/track.js lib/util.js",
    "doc": "open doc/index.html",
    "commit": "git --no-pager status && git --no-pager diff && git commit -a -m \"Updated `git status | sed -n '/modified:/ {s/^[[:space:]]*modified:[[:space:]]*//;s/\\.txt$//;s/\\.md$//;s/\\.html$//;s/\\/index$//;p;q;}'`\"",
    "amend": "git --no-pager status && git --no-pager diff && git commit -a --amend --no-edit",
    "reword": "git --no-pager status && git --no-pager diff && git commit -a --amend",
    "reset": "git reset --hard",
    "clear": "git stash clear",
    "reset!": "npm run reset && npm run clear",
    "push": "git --no-pager status && git pull --rebase && git push",
    "push!": "git --no-pager status && git push --force",
    "pull": "git --no-pager status && git pull --rebase",
    "tags": "git push --tags",
    "bump": "bun run push && bun run tags && bun publish",
    "patch": "bun version patch && bun run bump",
    "minor": "bun version minor && bun run bump",
    "major": "bun version major && bun run bump",
    "release": "bun run patch",
    "compress": "git gc --prune=now",
    "diff": "git diff",
    "log": "git log -p",
    "gitk": "gitk &",
    "status": "git status",
    "typedoc": "rm -rf doc && typedoc"
  }
}
